import React, { useEffect, useState } from "react";
import { Iconfig, Ielements } from "../../../types";
import { Container, Heading, Input, Nothing } from "./Filtration.styled";

interface Props {
  filterValue: string;
  setFilterValue(val: string): void;
  elements: Ielements[];
  setFilteredElements(arr: Ielements[]): void;
  setSortConfig({ key, direction, activeColumn }: Iconfig): void;
  setCurrentPage(number: number): void;
}

export const Filtration = ({
  filterValue,
  setFilterValue,
  elements,
  setFilteredElements,
  setSortConfig,
  setCurrentPage,
}: Props) => {
  const [isErrorInput, setErrorInput] = useState(false);

  useEffect(() => {
    if (filterValue.trim() !== "") {
      // —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏ –≤—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ filter() –Ω–∞ –º–∞—Å—Å–∏–≤–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
      const filteredElements = elements.filter((element: any) => {
        // –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω–ø—É—Ç–∞ —ç—Ç–æ —á–∏—Å–ª–æ, —Ç–æ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–æ–ª–µ id —Å –∏–Ω–ø–ø—É—Ç–æ–º
        if (parseInt(filterValue)) {
          return element.id === +filterValue;
        } else {
          // –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω–ø—É—Ç–∞ —Å—Ç—Ä–æ–∫–∞, —Ç–æ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –∏–∑ –∏–Ω–ø—É—Ç–∞ —Å –ø–æ–ª—è–º–∏ name –∏ email
          // –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω–ø—É—Ç–∞ –∏ –ø–æ–ª–µ–π name / email –ø—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
          return (
            element.name.toLowerCase().includes(filterValue.toLowerCase()) ||
            element.email.toLowerCase().includes(filterValue.toLowerCase())
          );
        }
      });

      // –µ—Å–ª–∏ –∏–Ω–ø—É—Ç –Ω–µ –ø—É—Å—Ç–æ–π –ò –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ä–∞–≤–Ω–æ 0, —Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
      if (filterValue !== "" && filteredElements.length === 0) {
        setErrorInput(true);
      } else setErrorInput(false);

      setFilteredElements(filteredElements);
    }
  }, [filterValue, elements, setFilteredElements]);

  const onChangeHanlder = (event: React.ChangeEvent<HTMLInputElement>) => {
    // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É —Å—Ç–æ–ª–±—Ü–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∏–Ω–ø—É—Ç–∞
    setSortConfig({ key: "", direction: "", activeColumn: "" });

    setCurrentPage(1);

    // –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω–ø—É—Ç–∞ –ø—É—Å—Ç–æ–µ, —Ç–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –º–∞—Å—Å–∏–≤ –æ—Ç—Ñ–∏–ª—å—Ç—Ä. —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    // —á—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—é –º–∞—Å—Å–∏–≤–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
    if (event.currentTarget.value.trim() === "") {
      setFilteredElements([]);
      setFilterValue("");

      // –∏–Ω–∞—á–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω–ø—É—Ç–∞
    } else setFilterValue(event.currentTarget.value.trim());
  };

  return (
    <Container>
      <Heading>What would you like to find? üïµÔ∏è‚Äç‚ôÇÔ∏è</Heading>
      <Input value={filterValue} onChange={onChangeHanlder} />
      {/* –µ—Å–ª–∏ –Ω–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, —Ç–æ –æ–ø–æ–≤–µ—â–∞–µ–º –æ–± —ç—Ç–æ–º */}
      {isErrorInput && <Nothing>Nothing found ü§∑üèº‚Äç‚ôÇÔ∏è</Nothing>}
    </Container>
  );
};
